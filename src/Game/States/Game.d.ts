import ECSManager from "../../Engine/ECS/ECSManager";
import State from "../../Engine/State";
import Rendering from "../../Engine/Rendering/Rendering";
import { StateAccessible } from "../GameMachine";
import Ray from "../../Engine/Physics/Shapes/Ray";
import GrassHandler from "../GrassHandler";
import ObjectPlacer from "../ObjectPlacer";
import Newspaper from "../Newspaper";
export default class Game extends State {
    rendering: Rendering;
    ecsManager: ECSManager;
    private stateAccessible;
    private overlayRendering;
    private menuButton;
    private scoreText;
    private gameTimeText;
    private player;
    private mapBundle;
    grassHandler: GrassHandler;
    gameTimer: number;
    score: number;
    newspapersStopped: Array<Newspaper>;
    objectPlacer: ObjectPlacer;
    private scene;
    private static instance;
    static getInstance(sa: StateAccessible): Game;
    static getInstanceNoSa(): Game;
    private constructor();
    load(): Promise<void>;
    init(): Promise<void>;
    reset(): void;
    onExit(e: BeforeUnloadEvent): void;
    createMapEntity(): void;
    createSurroundingArea(): void;
    doRayCast(ray: Ray): number;
    update(dt: number): void;
    prepareDraw(dt: number): void;
    draw(): void;
}
